<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: coffeescript | Sudix's Blog]]></title>
  <link href="http://sudix.github.io/blog/categories/coffeescript/atom.xml" rel="self"/>
  <link href="http://sudix.github.io/"/>
  <updated>2014-03-18T16:01:45+09:00</updated>
  <id>http://sudix.github.io/</id>
  <author>
    <name><![CDATA[sudix]]></name>
    <email><![CDATA[sudix7755@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[coffeescript] 標準偏差を使って異常っぽい値を検知してみる]]></title>
    <link href="http://sudix.github.io/blog/2013/08/23/error-detect-with-standard-deviation/"/>
    <updated>2013-08-23T11:02:00+09:00</updated>
    <id>http://sudix.github.io/blog/2013/08/23/error-detect-with-standard-deviation</id>
    <content type="html"><![CDATA[<p>日々変わる数字があって、たまに異常に減ったり増えたりする場合があり、
それが起きたときにすぐわかるようにしたい。
という要望があったので、標準偏差を使ってエラーっぽい値が分かるようにしてみました。
ブラウザ上で実行する必要があったのでcoffeescriptです。</p>

<h2>コード</h2>

<p>checkRangeListメソッドにデータを与えると、下限以下なら-1、上限以上なら1を返します。</p>

<p>```coffeescript</p>

<h6>#</h6>

<h1>異常値計算用クラス</h1>

<h6>#</h6>

<p>class ErrorDataDetector</p>

<p>  self = undefined</p>

<p>  # 平均からどれぐらい離れたら異常とみなすかの定数。
  # ±（この値×標準偏差）から外れていれば異常とします。
  # 2であればおよそ95%範囲の外の値になります。
  normalRange = 2</p>

<p>  constructor: &ndash;> self = this</p>

<p>  #平均を求める
  average: (data) &ndash;></p>

<pre><code>data.reduce((acc, n) -&gt; acc + n) / data.length
</code></pre>

<p>  #分散を求める
  #((データ－平均値)の２乗)の総和÷ 個数
  variance: (data, avg) &ndash;></p>

<pre><code>data.reduce((acc, n) -&gt; acc + Math.pow(n - avg, 2)) / data.length
</code></pre>

<p>  #標準偏差を求める
  #分散の平方根
  standardDeviation: (data, avg) &ndash;></p>

<pre><code>Math.sqrt(self.variance(data, avg))
</code></pre>

<p>  #外れ値かどうかを調べ、リストに結果を詰めて返す
  #-1:範囲外(下) 0:正常 1:範囲外(上)
  checkRangeList: (data) &ndash;></p>

<pre><code>avg = self.average(data)
sd = self.standardDeviation(data, avg)
lb = self.lowerBound(avg, sd)
ub = self.upperBound(avg, sd)
data.map (n) -&gt; self.checkRange(n, avg, lb, ub)
</code></pre>

<p>  # 下限境界
  lowerBound: (avg, sd) &ndash;> avg &ndash; (sd * normalRange)</p>

<p>  # 上限境界
  upperBound: (avg, sd) &ndash;> avg + (sd * normalRange)</p>

<p>  checkRange: (n, avg, lb, ub) &ndash;></p>

<pre><code>if avg == 0
  0
else if n &lt;= lb
  -1
else if n &gt;= ub
  1
else
  0
</code></pre>

<p>```</p>

<h2>実行結果</h2>

<p><code>coffeescript
l = [826,751,833,905,888,950,880,868,935,1293,1315,1555,1445,1732,1351,1157,1268,1201,733,2000,100]
d = new ErrorDataDetector()
console.log(d.checkRangeList(l))
 # 結果 =&gt;　[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1]
</code></p>

<h2>オチ</h2>

<p>さっそく実装して試したところ異常っぽい値を検知できたので意気揚々と担当者に見せたところ、
よくわかんないからもっと簡単なロジックにしてと言われましたとさ・・・。</p>
]]></content>
  </entry>
  
</feed>
